{
  "metadata": {
    "target_url": "https://example.com",
    "scan_timestamp": "20240115_143022",
    "scanner": "OWASP ZAP",
    "tool_version": "AutoPent.AI v1.0"
  },
  "summary": {
    "scan_date": "2024-01-15T14:30:22",
    "total_alerts": 5,
    "risk_counts": {
      "High": 2,
      "Medium": 2,
      "Low": 1,
      "Informational": 0
    }
  },
  "alerts": [
    {
      "name": "Cross-Site Scripting (Reflected)",
      "risk": "High",
      "confidence": "High",
      "url": "https://example.com/search",
      "param": "q",
      "attack": "<script>alert(1)</script>",
      "evidence": "<script>alert(1)</script>",
      "method": "GET",
      "cweid": "79",
      "wascid": "8",
      "description": "Cross-site Scripting (XSS) is an attack technique that forces a web application to echo attacker-supplied executable code, which loads in a user's browser.",
      "solution": "Validate all input and sanitize output to the web browser.",
      "reference": "https://owasp.org/www-community/attacks/xss/",
      "instances": [
        {
          "uri": "https://example.com/search?q=%3Cscript%3Ealert%281%29%3C%2Fscript%3E",
          "method": "GET",
          "param": "q",
          "attack": "<script>alert(1)</script>",
          "evidence": "<script>alert(1)</script>"
        }
      ]
    },
    {
      "name": "SQL Injection",
      "risk": "High", 
      "confidence": "Medium",
      "url": "https://example.com/login",
      "param": "username",
      "attack": "' OR '1'='1",
      "evidence": "MySQL error",
      "method": "POST",
      "cweid": "89",
      "wascid": "19",
      "description": "SQL injection is a code injection technique that exploits a security vulnerability in an application's software.",
      "solution": "Use parameterized queries and validate all input.",
      "reference": "https://owasp.org/www-community/attacks/SQL_Injection",
      "instances": [
        {
          "uri": "https://example.com/login",
          "method": "POST", 
          "param": "username",
          "attack": "' OR '1'='1",
          "evidence": "You have an error in your SQL syntax"
        }
      ]
    },
    {
      "name": "Cross-Site Request Forgery (CSRF)",
      "risk": "Medium",
      "confidence": "Medium", 
      "url": "https://example.com/transfer",
      "param": "",
      "attack": "",
      "evidence": "No anti-CSRF token found",
      "method": "POST",
      "cweid": "352",
      "wascid": "9",
      "description": "Cross-Site Request Forgery (CSRF) is an attack that forces an end user to execute unwanted actions on a web application.",
      "solution": "Implement anti-CSRF tokens and validate the origin of requests.",
      "reference": "https://owasp.org/www-community/attacks/csrf",
      "instances": [
        {
          "uri": "https://example.com/transfer",
          "method": "POST",
          "param": "",
          "attack": "",
          "evidence": "No anti-CSRF token found"
        }
      ]
    },
    {
      "name": "Information Disclosure - Debug Error Messages",
      "risk": "Medium",
      "confidence": "High",
      "url": "https://example.com/debug",
      "param": "",
      "attack": "",
      "evidence": "Django Debug Mode Enabled",
      "method": "GET",
      "cweid": "200",
      "wascid": "13",
      "description": "The application appears to be displaying debug information which can reveal sensitive system information.",
      "solution": "Disable debug mode in production environments.",
      "reference": "https://owasp.org/www-community/Improper_Error_Handling",
      "instances": [
        {
          "uri": "https://example.com/debug",
          "method": "GET",
          "param": "",
          "attack": "",
          "evidence": "DEBUG = True"
        }
      ]
    },
    {
      "name": "Missing Secure Flag on Cookie",
      "risk": "Low",
      "confidence": "High",
      "url": "https://example.com/",
      "param": "",
      "attack": "",
      "evidence": "sessionid=abc123; HttpOnly",
      "method": "GET",
      "cweid": "614",
      "wascid": "13",
      "description": "A cookie was set without the Secure flag, which means that the cookie can be accessed via unencrypted connections.",
      "solution": "Set the Secure flag on all cookies.",
      "reference": "https://owasp.org/www-community/controls/SecureCookieAttribute",
      "instances": [
        {
          "uri": "https://example.com/",
          "method": "GET",
          "param": "",
          "attack": "",
          "evidence": "sessionid=abc123; HttpOnly"
        }
      ]
    }
  ]
} 